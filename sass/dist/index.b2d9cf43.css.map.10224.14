{"mappings":"AAKA;;;;AAGI;;;;AAIJ;;;;AAIA;;;;AAIA;;;;;;;AAOI;;;;AAGA;;;;AASJ;;;;AAOI;;;;;AAAA;;;;;AAQA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAaA;EACI;;;;;AADJ;EACI;;;;;AADJ;EACI;;;;;AAoCR;;;;;;;;AAIA;;;;;;;;AAMA;;;;;;AAKA;;;;;AAsBA;;;;;;;AASA;;;;;AAkBA;;;;;;;AAGI;;;;;;AAaJ;;;;;;;AAKI;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAOA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAKA;;;;AAAA;;;;AAAA;;;;AAAA;;;;AAAA","sources":["src/style.scss"],"sourcesContent":["//controllare index.b2d9cf43.css\r\n$myFavouriteColor: blue;\r\n$type: light;\r\n$bg: #{$type}green;\r\n\r\n:root {\r\n    $dark: #222;\r\n    --darktheme-bg: #{$dark};\r\n    body {\r\n        background-color: var(--darktheme-bg);\r\n    }\r\n} \r\n#h1 {\r\n    background-color: $myFavouriteColor;\r\n\r\n}\r\n#p {\r\n    background-color: $bg;\r\n}\r\n\r\nsection {\r\n    font: {\r\n        size: 3rem;\r\n        family: serif;\r\n        weight: 700;\r\n        variant: small-caps;\r\n    }\r\n    > h3 {\r\n        background-color: yellow;\r\n    }\r\n    & :hover {\r\n        background-color: lightsalmon;\r\n    }\r\n}\r\n\r\n//funzioni\r\n@function get-font-size($fattore) {\r\n    @return $fattore * 3.2rem;\r\n}\r\n#div1 {\r\n    font-size: get-font-size(2);\r\n}\r\n\r\n//automizziamo la creazione di regole CSS con le liste\r\n$colori: green, blue magenta red;\r\n@each $colore in $colori {\r\n    .#{$colore} {\r\n        color: $colore;\r\n        border-color: $colore;\r\n    }\r\n} //index.b2d9cf43.css\r\n\r\n$colonne-num: 2, 3, 4, 6, 12;\r\n@each $colonne in $colonne-num {\r\n    .col-#{$colonne} {\r\n        $col-span: calc(12 / $colonne);\r\n        grid-template-columns: repeat($col-span, 1fr);\r\n    }\r\n} //index.b2d9cf43.css\r\n\r\n//mappe\r\n$breakpoint: (\r\n    \"small\": 600px,\r\n    \"medium\": 1200px,\r\n    \"big\": 1900px\r\n);\r\n@each $chiave, $valore in $breakpoint {\r\n    @media (min-width: $valore) {\r\n        .container-#{$chiave} {\r\n            max-width: calc($valore - 100px);\r\n        }\r\n    }\r\n} //index.b2d9cf43.css\r\n\r\n//mixin\r\n/*\r\n#div2 {\r\n    font-size: 1.5rem;\r\n    padding: 1em;\r\n    border: 2px solid magenta;\r\n}\r\n#p2 {\r\n    font-size: 1.5rem;\r\n    padding: 1em;\r\n    border: 2px solid magenta;\r\n}\r\nOPPURE\r\n.std {\r\n    font-size: 1.5rem;\r\n    padding: 1em;\r\n    border: 2px solid magenta;\r\n}\r\n*/\r\n\r\n@mixin block-std-2 {\r\n    background-color: white;\r\n}\r\n//Se all'interno abbiamo valori diversi \r\n@mixin block-std($fz, $padding, $border-color, $fw) {\r\n    font-size: $fz;\r\n    padding: $padding;\r\n    border: 4px solid $border-color;  \r\n    font-weight: $fw;\r\n}\r\n#div2 {\r\n    @include block-std-2;\r\n    @include block-std(1.2rem, 1em, magenta, 400);\r\n}\r\n#p2 {\r\n    @include block-std-2;\r\n    @include block-std(1rem, 0.8em, blue, 700);\r\n}\r\n\r\n//Extend, simile ai @mixin - differenze nel file CSS compilato index.b2d9cf43.css\r\n.base {\r\n    padding: 1em;\r\n    border: 2px solid;\r\n    margin-bottom: 2rem;\r\n}\r\n.special {\r\n    @extend .base;\r\n    font-weight: bold;\r\n    color: yellow;\r\n}\r\n/*\r\n@mixin base-style {\r\n    padding: 1em;\r\n    border: 2px solid;\r\n    margin-bottom: 2rem;\r\n}\r\n.base {\r\n    @include base-style;\r\n}\r\n.special {\r\n    @include base-style\r\n    font-weight: bold;\r\n    color: yellow;\r\n}\r\n*/\r\n\r\n//placeholder selector % -- estendiamo le dichiarazioni\r\n%base-style {\r\n    padding: 1em;\r\n    border: 2px solid;\r\n    margin-bottom: 2rem;\r\n    display: inline-block;\r\n}\r\n.base2 {\r\n    @extend %base-style;\r\n}\r\n.special2 {\r\n    @extend %base-style;\r\n    font-weight: bold;\r\n    color: yellow;\r\n}\r\n\r\n//@if @else\r\n@mixin base-style($fz, $bold: false) {\r\n    font-size: $fz;\r\n    @if $bold {\r\n        font-weight: 700;\r\n        color: aliceblue;\r\n    } @else {\r\n        font-weight: 400;\r\n        color: red;\r\n    }\r\n    \r\n}\r\n#article1 {\r\n    @include base-style(3rem, true);\r\n    margin-bottom: 2rem;\r\n    > div {\r\n        @include base-style(2rem);\r\n    }\r\n}\r\n\r\n//@each - creiamo un grid system\r\n$gap-default: 1rem;\r\n$column-span: 2, 3, 4, 6, 8, 12;\r\n@mixin container($col: 12, $gap: $gap-default) {\r\n    display: grid;\r\n    grid-template-columns: repeat($col, 1fr);\r\n    gap: $gap;\r\n}\r\n.container {\r\n    font-size: 115%;\r\n    @include container();\r\n}\r\n@each $span in $column-span {\r\n    .col#{$span} {\r\n        grid-column: span $span;\r\n    }\r\n}\r\n\r\n//@for - invece di @each\r\n@for $i from 1 to 5 {\r\n    .colonna-#{$i} {\r\n        width: calc(100% / $i);\r\n    }\r\n}//index.b2d9cf43.css\r\n@for $index from 1 through 5 {\r\n    .colonna2-#{$index} {\r\n        width: calc(100% / $index);\r\n    }\r\n}//index.b2d9cf43.css\r\n"],"names":[],"version":3,"file":"index.b2d9cf43.css.map","sourceRoot":"/__parcel_source_root/"}